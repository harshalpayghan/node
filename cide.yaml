AWSTemplateFormatVersion: '2010-09-09'
Description: CI/CD Pipeline for Static Website Deployment

Resources:
  MyCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: my-artifact-bucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: your-github-username
                Repo: your-repo-name
                Branch: main
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1

        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref MyCodeBuild
              InputArtifacts:
                - Name: SourceOutput
              RunOrder: 2
        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: S3
              Configuration:
                BucketName: your-s3-bucket-name
                Extract: true
                ObjectKey: /
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 3
            - Name: InvalidateCache
              ActionTypeId:
                Category: InvalidateCache
                Owner: AWS
                Version: 1
                Provider: CloudFront
              Configuration:
                DistributionId: your-cloudfront-distribution-id
                ObjectPaths:
                  - '/*'
              RunOrder: 4

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - arn:aws:s3:::your-s3-bucket-name
                  - arn:aws:s3:::your-s3-bucket-name/*
              - Effect: Allow
                Action:
                  - cloudfront:CreateInvalidation
                Resource:
                  - arn:aws:cloudfront::your-cloudfront-distribution-id
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                Resource: '*'

  MyCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: MyCodeBuildProject
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard
      Source:
        Type: CODEPIPELINE
      BuildSpec:
        version: 0.2
        phases:
          install:
            #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
            #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
            runtime-versions:
              nodejs: 16
          pre_build:
            commands:
              - echo Installing source NPM dependencies...
              - npm install
          build:
            commands:
              - echo Build started on 'date'
              - npm run build
          post_build:
            commands:
              - aws s3 cp --recursive --acl public-read ./build s3://<bucket-name>/
              - aws s3 cp --acl public-read --cache-control="max-age=0, no-cache, no-store, must-revalidate" ./build/index.html s3://<bucket-name>/
              - aws cloudfront create-invalidation --distribution-id <cloudfront-distribution-id> --paths /index.html
        artifacts:
          files:
            - "build/*"
            - "build/**/*"